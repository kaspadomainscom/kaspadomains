/* src/app/globals.css */

/* Import Tailwind CSS */
@import "tailwindcss";

/* Light and Dark Theme Variables */
:root {
  --background: #ffffff;
  --foreground: #171717;

  --kaspa-green: '#36f2b0';
  --kaspaGreen: #70C7BA;
  --kaspaGreenLight: #49EACB;
  --kaspaDark: #231F20;
  --kaspaGray: #B6B6B6;

  /* Additional Kaspa color palette */
  --kaspaMint: #7EF4CC;
  --kaspaAqua: #38E8DC;
  --kaspaBlue: #0091AD;
  --kaspaTeal: #178582;
  --kaspaDarkGreen: #0F2F2E;
  --kaspaGold: #FFD700;
  --kaspaWhite: #F7FDFC;
}

/* Dark mode preferences */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #4c3737;
    --foreground: #ededed;
  }
}


/* Base styles using Tailwind utilities with CSS variables */
@layer base {
  body {
    background-color: var(--background);
    color: var(--foreground);
    font-family: system-ui, sans-serif;
    margin: 0;
    padding: 0;
  }
}

/* Add this to your global CSS or inside a <style> tag in your _app.tsx or similar */

.loader {
  border-top-color: #3498db; /* Blue */
  animation: spin 1s linear infinite;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

module.exports = {
  theme: {
    extend: {
      backgroundImage: {
        'split-kas-split': 'conic-gradient(#21bf73 0deg 180deg, #116530 180deg 360deg)',
        'token-distribution': 'conic-gradient(#21bf73 0deg 72deg, #3d9970 72deg 208deg, #116530 208deg 360deg)',
      }
    }
  }
}

/* Your custom utility classes for Kaspa colors */
.text-kaspaGreen {
  color: var(--kaspaGreen);
}
.bg-kaspaGreen {
  background-color: var(--kaspaGreen);
}

.text-kaspaGreenLight {
  color: var(--kaspaGreenLight);
}
.bg-kaspaGreenLight {
  background-color: var(--kaspaGreenLight);
}

.text-kaspaDark {
  color: var(--kaspaDark);
}
.bg-kaspaDark {
  background-color: var(--kaspaDark);
}

.text-kaspaGray {
  color: var(--kaspaGray);
}
.bg-kaspaGray {
  background-color: var(--kaspaGray);
}

.text-kaspaMint {
  color: var(--kaspaMint);
}
.bg-kaspaMint {
  background-color: var(--kaspaMint);
}

.text-kaspaAqua {
  color: var(--kaspaAqua);
}
.bg-kaspaAqua {
  background-color: var(--kaspaAqua);
}

.text-kaspaBlue {
  color: var(--kaspaBlue);
}
.bg-kaspaBlue {
  background-color: var(--kaspaBlue);
}

.text-kaspaTeal {
  color: var(--kaspaTeal);
}
.bg-kaspaTeal {
  background-color: var(--kaspaTeal);
}
.text-kaspaDarkGreen {
  color: var(--kaspaDarkGreen);
}
.bg-kaspaDarkGreen {
  background-color: var(--kaspaDarkGreen);
}
.text-kaspaGold {
  color: var(--kaspaGold);
}
.bg-kaspaGold {
  background-color: var(--kaspaGold);
}

.text-kaspaWhite {
  color: var(--kaspaWhite);
}
.bg-kaspaWhite {
  background-color: var(--kaspaWhite);
}

/* Glow text utilities */
.glowText {
  text-shadow: 0 0 3px #3DFDAD, 0 0 5px #3DFDAD;
}

.glow-green {
  text-shadow: 0 0 6px #3DFDAD, 0 0 12px #3DFDAD;
}

/* Animation utilities */
@layer utilities {
  .animate-marquee {
    animation: marquee 25s linear infinite;
  }

  @keyframes marquee {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  .animate-slide-down {
    animation: slideDown 0.25s ease-out forwards;
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
